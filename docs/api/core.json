{
	"id": 0,
	"name": "@baklavajs/core",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 524,
			"name": "\"src/connection\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/src/connection.ts",
			"children": [
				{
					"id": 525,
					"name": "Connection",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 533,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 534,
									"name": "new Connection",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 535,
											"name": "from",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NodeInterface",
												"id": 493
											}
										},
										{
											"id": 536,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NodeInterface",
												"id": 493
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Connection",
										"id": 525
									}
								}
							],
							"sources": [
								{
									"fileName": "src/connection.ts",
									"line": 16,
									"character": 6
								}
							]
						},
						{
							"id": 530,
							"name": "destructed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/connection.ts",
									"line": 12,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"implementationOf": {
								"type": "reference",
								"name": "ITransferConnection.destructed",
								"id": 255
							}
						},
						{
							"id": 527,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/connection.ts",
									"line": 9,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NodeInterface",
								"id": 493
							},
							"implementationOf": {
								"type": "reference",
								"name": "ITransferConnection.from",
								"id": 257
							}
						},
						{
							"id": 526,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/connection.ts",
									"line": 8,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "ITransferConnection.id",
								"id": 256
							}
						},
						{
							"id": 529,
							"name": "isInDanger",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/connection.ts",
									"line": 11,
									"character": 21
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"implementationOf": {
								"type": "reference",
								"name": "ITransferConnection.isInDanger",
								"id": 254
							}
						},
						{
							"id": 528,
							"name": "to",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/connection.ts",
									"line": 10,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "NodeInterface",
								"id": 493
							},
							"implementationOf": {
								"type": "reference",
								"name": "ITransferConnection.to",
								"id": 258
							}
						},
						{
							"id": 537,
							"name": "destruct",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 538,
									"name": "destruct",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/connection.ts",
									"line": 33,
									"character": 19
								}
							]
						},
						{
							"id": 531,
							"name": "events",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 532,
									"name": "destruct",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/connection.ts",
											"line": 15,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"name": "BaklavaEvent",
										"id": 261,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									},
									"defaultValue": " new BaklavaEvent<void>()"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										532
									]
								}
							],
							"sources": [
								{
									"fileName": "src/connection.ts",
									"line": 14,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								533
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								530,
								527,
								526,
								529,
								528
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								537
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								531
							]
						}
					],
					"sources": [
						{
							"fileName": "src/connection.ts",
							"line": 6,
							"character": 23
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "ITransferConnection",
							"id": 253
						}
					]
				},
				{
					"id": 539,
					"name": "DummyConnection",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This class is used for calculation purposes only.\nIt won't alter any state of the connected nodes"
					},
					"children": [
						{
							"id": 543,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 544,
									"name": "new DummyConnection",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 545,
											"name": "from",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NodeInterface",
												"id": 493
											}
										},
										{
											"id": 546,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NodeInterface",
												"id": 493
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "DummyConnection",
										"id": 539
									}
								}
							],
							"sources": [
								{
									"fileName": "src/connection.ts",
									"line": 50,
									"character": 29
								}
							]
						},
						{
							"id": 541,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/connection.ts",
									"line": 49,
									"character": 15
								}
							],
							"type": {
								"type": "reference",
								"name": "NodeInterface",
								"id": 493
							},
							"implementationOf": {
								"type": "reference",
								"name": "IConnection.from",
								"id": 251
							}
						},
						{
							"id": 540,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/connection.ts",
									"line": 48,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IConnection.id",
								"id": 250
							}
						},
						{
							"id": 542,
							"name": "to",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/connection.ts",
									"line": 50,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "NodeInterface",
								"id": 493
							},
							"implementationOf": {
								"type": "reference",
								"name": "IConnection.to",
								"id": 252
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								543
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								541,
								540,
								542
							]
						}
					],
					"sources": [
						{
							"fileName": "src/connection.ts",
							"line": 46,
							"character": 28
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IConnection",
							"id": 249
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						525,
						539
					]
				}
			],
			"sources": [
				{
					"fileName": "src/connection.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 329,
			"name": "\"src/editor\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/src/editor.ts",
			"children": [
				{
					"id": 330,
					"name": "Editor",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The main model class for BaklavaJS"
					},
					"children": [
						{
							"id": 333,
							"name": "_connections",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 13,
									"character": 24
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Connection",
									"id": 525
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 335,
							"name": "_nodeCategories",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 15,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "Map",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							},
							"defaultValue": " new Map([[\"default\", []]])"
						},
						{
							"id": 334,
							"name": "_nodeTypes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 14,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "Map",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "NodeConstructor",
										"id": 139
									}
								]
							},
							"defaultValue": " new Map()"
						},
						{
							"id": 332,
							"name": "_nodes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 12,
									"character": 18
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "Node",
									"id": 419
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 331,
							"name": "_plugins",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 11,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "Set",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IPlugin",
										"id": 78
									}
								]
							},
							"defaultValue": " new Set()"
						},
						{
							"id": 355,
							"name": "connections",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "List of all connections"
							},
							"getSignature": [
								{
									"id": 356,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "List of all connections"
									},
									"type": {
										"type": "reference",
										"name": "ReadonlyArray",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Connection",
												"id": 525
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 44,
									"character": 26
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IEditor.connections",
								"id": 105
							}
						},
						{
							"id": 360,
							"name": "nodeCategories",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Mapping of nodes to node categories"
							},
							"getSignature": [
								{
									"id": 361,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "Mapping of nodes to node categories"
									},
									"type": {
										"type": "reference",
										"name": "ReadonlyMap",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "array",
												"elementType": {
													"type": "intrinsic",
													"name": "string"
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 54,
									"character": 29
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IEditor.nodeCategories",
								"id": 107
							}
						},
						{
							"id": 357,
							"name": "nodeTypes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "List of all registered node types"
							},
							"getSignature": [
								{
									"id": 358,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "List of all registered node types"
									},
									"type": {
										"type": "reference",
										"name": "ReadonlyMap",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reflection",
												"declaration": {
													"id": 359,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {}
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 49,
									"character": 24
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IEditor.nodeTypes",
								"id": 106
							}
						},
						{
							"id": 353,
							"name": "nodes",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "List of all nodes"
							},
							"getSignature": [
								{
									"id": 354,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "List of all nodes"
									},
									"type": {
										"type": "reference",
										"name": "ReadonlyArray",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Node",
												"id": 419
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 39,
									"character": 20
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IEditor.nodes",
								"id": 104
							}
						},
						{
							"id": 362,
							"name": "plugins",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "List of all plugins in this editor"
							},
							"getSignature": [
								{
									"id": 363,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "List of all plugins in this editor"
									},
									"type": {
										"type": "reference",
										"name": "ReadonlySet",
										"typeArguments": [
											{
												"type": "reference",
												"name": "IPlugin",
												"id": 78
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 59,
									"character": 22
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IEditor.plugins",
								"id": 108
							}
						},
						{
							"id": 375,
							"name": "addConnection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 376,
									"name": "addConnection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a connection to the list of connections.",
										"returns": "The created connection. If no connection could be created, returns `undefined`.\n"
									},
									"parameters": [
										{
											"id": 377,
											"name": "from",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Start interface for the connection"
											},
											"type": {
												"type": "reference",
												"name": "NodeInterface",
												"id": 493
											}
										},
										{
											"id": 378,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Target interface for the connection"
											},
											"type": {
												"type": "reference",
												"name": "NodeInterface",
												"id": 493
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Connection",
												"id": 525
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 114,
									"character": 24
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IEditor.addConnection",
								"id": 120
							}
						},
						{
							"id": 369,
							"name": "addNode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 370,
									"name": "addNode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a node to the list of nodes.",
										"returns": "Instance of the node or undefined if the node was not added\n"
									},
									"parameters": [
										{
											"id": 371,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Instance of a node"
											},
											"type": {
												"type": "reference",
												"name": "Node",
												"id": 419
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "Node",
												"id": 419
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 84,
									"character": 18
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IEditor.addNode",
								"id": 114
							}
						},
						{
							"id": 382,
							"name": "checkConnection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 383,
									"name": "checkConnection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Checks, whether a connection between two node interfaces would be valid.",
										"returns": "Whether the connection is allowed or not.\n"
									},
									"parameters": [
										{
											"id": 384,
											"name": "from",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The starting node interface (must be an output interface)"
											},
											"type": {
												"type": "reference",
												"name": "NodeInterface",
												"id": 493
											}
										},
										{
											"id": 385,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The target node interface (must be an input interface)"
											},
											"type": {
												"type": "reference",
												"name": "NodeInterface",
												"id": 493
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "false"
											},
											{
												"type": "reference",
												"name": "DummyConnection",
												"id": 539
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 157,
									"character": 26
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IEditor.checkConnection",
								"id": 127
							}
						},
						{
							"id": 394,
							"name": "findNodeInterface",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 395,
									"name": "findNodeInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 396,
											"name": "id",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "NodeInterface",
												"id": 493
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 264,
									"character": 29
								}
							]
						},
						{
							"id": 386,
							"name": "load",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 387,
									"name": "load",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Load a state"
									},
									"parameters": [
										{
											"id": 388,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "State to load\n"
											},
											"type": {
												"type": "reference",
												"name": "IState",
												"id": 6
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IEditor.load",
										"id": 132
									}
								}
							],
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 188,
									"character": 15
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IEditor.load",
								"id": 131
							}
						},
						{
							"id": 364,
							"name": "registerNodeType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 365,
									"name": "registerNodeType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a new node type"
									},
									"parameters": [
										{
											"id": 366,
											"name": "typeName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the node (must be equal to the node's `type` field)"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 367,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Actual type / constructor of the node"
											},
											"type": {
												"type": "reference",
												"name": "NodeConstructor",
												"id": 139
											}
										},
										{
											"id": 368,
											"name": "category",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Category of the node. Will be used in the view's context menu for adding nodes\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											},
											"defaultValue": "\"default\""
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 69,
									"character": 27
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IEditor.registerNodeType",
								"id": 109
							}
						},
						{
							"id": 379,
							"name": "removeConnection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 380,
									"name": "removeConnection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Remove a connection from the list of connections."
									},
									"parameters": [
										{
											"id": 381,
											"name": "connection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Connection instance that should be removed.\n"
											},
											"type": {
												"type": "reference",
												"name": "Connection",
												"id": 525
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 142,
									"character": 27
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IEditor.removeConnection",
								"id": 124
							}
						},
						{
							"id": 372,
							"name": "removeNode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 373,
									"name": "removeNode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Removes a node from the list.\nWill also remove all connections from and to the node."
									},
									"parameters": [
										{
											"id": 374,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Reference to a node in the list.\n"
											},
											"type": {
												"type": "reference",
												"name": "Node",
												"id": 419
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 97,
									"character": 21
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IEditor.removeNode",
								"id": 117
							}
						},
						{
							"id": 389,
							"name": "save",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 390,
									"name": "save",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Save a state",
										"returns": "Current state\n"
									},
									"type": {
										"type": "reference",
										"name": "IState",
										"id": 6
									},
									"implementationOf": {
										"type": "reference",
										"name": "IEditor.save",
										"id": 135
									}
								}
							],
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 239,
									"character": 15
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IEditor.save",
								"id": 134
							}
						},
						{
							"id": 391,
							"name": "use",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 392,
									"name": "use",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a plugin",
										"returns": "Whether the plugin was successfully registered\n"
									},
									"parameters": [
										{
											"id": 393,
											"name": "plugin",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Plugin to register"
											},
											"type": {
												"type": "reference",
												"name": "IPlugin",
												"id": 78
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IEditor.use",
										"id": 137
									}
								}
							],
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 256,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IEditor.use",
								"id": 136
							}
						},
						{
							"id": 336,
							"name": "events",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 344,
									"name": "addConnection",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/editor.ts",
											"line": 25,
											"character": 21
										}
									],
									"type": {
										"type": "reference",
										"name": "BaklavaEvent",
										"id": 261,
										"typeArguments": [
											{
												"type": "reference",
												"name": "IConnection",
												"id": 249
											}
										]
									},
									"defaultValue": " new BaklavaEvent<IConnection>()"
								},
								{
									"id": 340,
									"name": "addNode",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/editor.ts",
											"line": 21,
											"character": 15
										}
									],
									"type": {
										"type": "reference",
										"name": "BaklavaEvent",
										"id": 261,
										"typeArguments": [
											{
												"type": "reference",
												"name": "INode",
												"id": 176
											}
										]
									},
									"defaultValue": " new BaklavaEvent<INode>()"
								},
								{
									"id": 343,
									"name": "beforeAddConnection",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/editor.ts",
											"line": 24,
											"character": 27
										}
									],
									"type": {
										"type": "reference",
										"name": "PreventableBaklavaEvent",
										"id": 274,
										"typeArguments": [
											{
												"type": "reference",
												"name": "IAddConnectionEventData",
												"id": 151
											}
										]
									},
									"defaultValue": " new PreventableBaklavaEvent<IAddConnectionEventData>()"
								},
								{
									"id": 339,
									"name": "beforeAddNode",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/editor.ts",
											"line": 20,
											"character": 21
										}
									],
									"type": {
										"type": "reference",
										"name": "PreventableBaklavaEvent",
										"id": 274,
										"typeArguments": [
											{
												"type": "reference",
												"name": "INode",
												"id": 176
											}
										]
									},
									"defaultValue": " new PreventableBaklavaEvent<INode>()"
								},
								{
									"id": 337,
									"name": "beforeRegisterNodeType",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/editor.ts",
											"line": 18,
											"character": 30
										}
									],
									"type": {
										"type": "reference",
										"name": "PreventableBaklavaEvent",
										"id": 274,
										"typeArguments": [
											{
												"type": "reference",
												"name": "IAddNodeTypeEventData",
												"id": 154
											}
										]
									},
									"defaultValue": " new PreventableBaklavaEvent<IAddNodeTypeEventData>()"
								},
								{
									"id": 346,
									"name": "beforeRemoveConnection",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/editor.ts",
											"line": 27,
											"character": 30
										}
									],
									"type": {
										"type": "reference",
										"name": "PreventableBaklavaEvent",
										"id": 274,
										"typeArguments": [
											{
												"type": "reference",
												"name": "IConnection",
												"id": 249
											}
										]
									},
									"defaultValue": " new PreventableBaklavaEvent<IConnection>()"
								},
								{
									"id": 341,
									"name": "beforeRemoveNode",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/editor.ts",
											"line": 22,
											"character": 24
										}
									],
									"type": {
										"type": "reference",
										"name": "PreventableBaklavaEvent",
										"id": 274,
										"typeArguments": [
											{
												"type": "reference",
												"name": "INode",
												"id": 176
											}
										]
									},
									"defaultValue": " new PreventableBaklavaEvent<INode>()"
								},
								{
									"id": 348,
									"name": "beforeUsePlugin",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/editor.ts",
											"line": 29,
											"character": 23
										}
									],
									"type": {
										"type": "reference",
										"name": "PreventableBaklavaEvent",
										"id": 274,
										"typeArguments": [
											{
												"type": "reference",
												"name": "IPlugin",
												"id": 78
											}
										]
									},
									"defaultValue": " new PreventableBaklavaEvent<IPlugin>()"
								},
								{
									"id": 345,
									"name": "checkConnection",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/editor.ts",
											"line": 26,
											"character": 23
										}
									],
									"type": {
										"type": "reference",
										"name": "PreventableBaklavaEvent",
										"id": 274,
										"typeArguments": [
											{
												"type": "reference",
												"name": "IAddConnectionEventData",
												"id": 151
											}
										]
									},
									"defaultValue": " new PreventableBaklavaEvent<IAddConnectionEventData>()"
								},
								{
									"id": 338,
									"name": "registerNodeType",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/editor.ts",
											"line": 19,
											"character": 24
										}
									],
									"type": {
										"type": "reference",
										"name": "BaklavaEvent",
										"id": 261,
										"typeArguments": [
											{
												"type": "reference",
												"name": "IAddNodeTypeEventData",
												"id": 154
											}
										]
									},
									"defaultValue": " new BaklavaEvent<IAddNodeTypeEventData>()"
								},
								{
									"id": 347,
									"name": "removeConnection",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/editor.ts",
											"line": 28,
											"character": 24
										}
									],
									"type": {
										"type": "reference",
										"name": "BaklavaEvent",
										"id": 261,
										"typeArguments": [
											{
												"type": "reference",
												"name": "IConnection",
												"id": 249
											}
										]
									},
									"defaultValue": " new BaklavaEvent<IConnection>()"
								},
								{
									"id": 342,
									"name": "removeNode",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/editor.ts",
											"line": 23,
											"character": 18
										}
									],
									"type": {
										"type": "reference",
										"name": "BaklavaEvent",
										"id": 261,
										"typeArguments": [
											{
												"type": "reference",
												"name": "INode",
												"id": 176
											}
										]
									},
									"defaultValue": " new BaklavaEvent<INode>()"
								},
								{
									"id": 349,
									"name": "usePlugin",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/editor.ts",
											"line": 30,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"name": "BaklavaEvent",
										"id": 261,
										"typeArguments": [
											{
												"type": "reference",
												"name": "IPlugin",
												"id": 78
											}
										]
									},
									"defaultValue": " new BaklavaEvent<IPlugin>()"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										344,
										340,
										343,
										339,
										337,
										346,
										341,
										348,
										345,
										338,
										347,
										342,
										349
									]
								}
							],
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 17,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IEditor.events",
								"id": 85
							}
						},
						{
							"id": 350,
							"name": "hooks",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 352,
									"name": "load",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/editor.ts",
											"line": 35,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "SequentialHook",
										"id": 302,
										"typeArguments": [
											{
												"type": "reference",
												"name": "IState",
												"id": 6
											}
										]
									},
									"defaultValue": " new SequentialHook<IState>()"
								},
								{
									"id": 351,
									"name": "save",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/editor.ts",
											"line": 34,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "SequentialHook",
										"id": 302,
										"typeArguments": [
											{
												"type": "reference",
												"name": "IState",
												"id": 6
											}
										]
									},
									"defaultValue": " new SequentialHook<IState>()"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										352,
										351
									]
								}
							],
							"sources": [
								{
									"fileName": "src/editor.ts",
									"line": 33,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"implementationOf": {
								"type": "reference",
								"name": "IEditor.hooks",
								"id": 100
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								333,
								335,
								334,
								332,
								331
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								355,
								360,
								357,
								353,
								362
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								375,
								369,
								382,
								394,
								386,
								364,
								379,
								372,
								389,
								391
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								336,
								350
							]
						}
					],
					"sources": [
						{
							"fileName": "src/editor.ts",
							"line": 9,
							"character": 19
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IEditor",
							"id": 84
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						330
					]
				}
			],
			"sources": [
				{
					"fileName": "src/editor.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 260,
			"name": "\"src/events/eventEmitter\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/src/events/eventEmitter.ts",
			"children": [
				{
					"id": 261,
					"name": "BaklavaEvent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Main event class for Baklava"
					},
					"typeParameter": [
						{
							"id": 262,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 263,
							"name": "listeners",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/events/eventEmitter.ts",
									"line": 10,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "Map",
								"typeArguments": [
									{
										"type": "reference",
										"name": "TokenType",
										"id": 316
									},
									{
										"type": "reference",
										"name": "Listener",
										"id": 317,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								]
							},
							"defaultValue": " new Map()"
						},
						{
							"id": 264,
							"name": "addListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 265,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Subscribe to the event"
									},
									"parameters": [
										{
											"id": 266,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A token that can be used to unsubscribe from the event later on"
											},
											"type": {
												"type": "reference",
												"name": "TokenType",
												"id": 316
											}
										},
										{
											"id": 267,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A callback that will be invoked when the event occurs\n"
											},
											"type": {
												"type": "reference",
												"name": "Listener",
												"id": 317,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IBaklavaEvent.addListener",
										"id": 31
									}
								}
							],
							"sources": [
								{
									"fileName": "src/events/eventEmitter.ts",
									"line": 17,
									"character": 22
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IBaklavaEvent.addListener",
								"id": 30
							}
						},
						{
							"id": 271,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 272,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Invoke all listeners"
									},
									"parameters": [
										{
											"id": 273,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The data to invoke the listeners with.\n"
											},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IBaklavaEvent.emit",
										"id": 38
									}
								}
							],
							"sources": [
								{
									"fileName": "src/events/eventEmitter.ts",
									"line": 36,
									"character": 8
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IBaklavaEvent.emit",
								"id": 37
							}
						},
						{
							"id": 268,
							"name": "removeListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 269,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Remove a listener"
									},
									"parameters": [
										{
											"id": 270,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The token that was specified when subscribing to the listener.\nAn invalid token does not result in an error.\n"
											},
											"type": {
												"type": "reference",
												"name": "TokenType",
												"id": 316
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IBaklavaEvent.removeListener",
										"id": 35
									}
								}
							],
							"sources": [
								{
									"fileName": "src/events/eventEmitter.ts",
									"line": 26,
									"character": 25
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IBaklavaEvent.removeListener",
								"id": 34
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								263
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								264,
								271,
								268
							]
						}
					],
					"sources": [
						{
							"fileName": "src/events/eventEmitter.ts",
							"line": 8,
							"character": 25
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "PreventableBaklavaEvent",
							"id": 274
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IBaklavaEvent",
							"id": 28,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T"
								}
							]
						}
					]
				},
				{
					"id": 287,
					"name": "Hook",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"comment": {
						"shortText": "Base class for hooks in Baklava"
					},
					"typeParameter": [
						{
							"id": 288,
							"name": "I",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 289,
							"name": "O",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 290,
							"name": "tapMap",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/events/eventEmitter.ts",
									"line": 66,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Map",
								"typeArguments": [
									{
										"type": "reference",
										"name": "TokenType",
										"id": 316
									},
									{
										"type": "reference",
										"name": "HookTap",
										"id": 322,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "I"
											},
											{
												"type": "typeParameter",
												"name": "O"
											}
										]
									}
								]
							},
							"defaultValue": " new Map()"
						},
						{
							"id": 291,
							"name": "taps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/events/eventEmitter.ts",
									"line": 67,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HookTap",
										"id": 322,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "I"
											},
											{
												"type": "typeParameter",
												"name": "O"
											}
										]
									}
								]
							},
							"defaultValue": " []"
						},
						{
							"id": 299,
							"name": "execute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true,
								"isAbstract": true
							},
							"signatures": [
								{
									"id": 300,
									"name": "execute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 301,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "I"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "O"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IHook.execute",
										"id": 63
									}
								}
							],
							"sources": [
								{
									"fileName": "src/events/eventEmitter.ts",
									"line": 86,
									"character": 27
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IHook.execute",
								"id": 62
							}
						},
						{
							"id": 292,
							"name": "tap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 293,
									"name": "tap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 294,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenType",
												"id": 316
											}
										},
										{
											"id": 295,
											"name": "tapFn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HookTap",
												"id": 322,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "I"
													},
													{
														"type": "typeParameter",
														"name": "O"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IHook.tap",
										"id": 56
									}
								}
							],
							"sources": [
								{
									"fileName": "src/events/eventEmitter.ts",
									"line": 69,
									"character": 14
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IHook.tap",
								"id": 55
							}
						},
						{
							"id": 296,
							"name": "untap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 297,
									"name": "untap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 298,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenType",
												"id": 316
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "IHook.untap",
										"id": 60
									}
								}
							],
							"sources": [
								{
									"fileName": "src/events/eventEmitter.ts",
									"line": 77,
									"character": 16
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "IHook.untap",
								"id": 59
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								290,
								291
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								299,
								292,
								296
							]
						}
					],
					"sources": [
						{
							"fileName": "src/events/eventEmitter.ts",
							"line": 64,
							"character": 26
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "SequentialHook",
							"id": 302
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IHook",
							"id": 52,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "I"
								},
								{
									"type": "typeParameter",
									"name": "O"
								}
							]
						}
					]
				},
				{
					"id": 274,
					"name": "PreventableBaklavaEvent",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Extension for the [[BaklavaEvent]] class. A listener can return `false` to prevent\nthis event from happening."
					},
					"typeParameter": [
						{
							"id": 275,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 279,
							"name": "listeners",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/events/eventEmitter.ts",
									"line": 10,
									"character": 23
								}
							],
							"type": {
								"type": "reference",
								"name": "Map",
								"typeArguments": [
									{
										"type": "reference",
										"name": "TokenType",
										"id": 316
									},
									{
										"type": "reference",
										"name": "Listener",
										"id": 317,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											}
										]
									}
								]
							},
							"defaultValue": " new Map()",
							"inheritedFrom": {
								"type": "reference",
								"name": "BaklavaEvent.listeners",
								"id": 263
							}
						},
						{
							"id": 280,
							"name": "addListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 281,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Subscribe to the event"
									},
									"parameters": [
										{
											"id": 282,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A token that can be used to unsubscribe from the event later on"
											},
											"type": {
												"type": "reference",
												"name": "TokenType",
												"id": 316
											}
										},
										{
											"id": 283,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "A callback that will be invoked when the event occurs\n"
											},
											"type": {
												"type": "reference",
												"name": "Listener",
												"id": 317,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaklavaEvent.addListener",
										"id": 264
									},
									"implementationOf": {
										"type": "reference",
										"name": "IBaklavaEvent.addListener",
										"id": 31
									}
								}
							],
							"sources": [
								{
									"fileName": "src/events/eventEmitter.ts",
									"line": 17,
									"character": 22
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BaklavaEvent.addListener",
								"id": 264
							},
							"implementationOf": {
								"type": "reference",
								"name": "IBaklavaEvent.addListener",
								"id": 30
							}
						},
						{
							"id": 276,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 277,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Invoke all listeners.",
										"returns": "`true` when one of the listeners requested to prevent the event, otherwise `false`\n"
									},
									"parameters": [
										{
											"id": 278,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The data to invoke all listeners with"
											},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"name": "BaklavaEvent.emit",
										"id": 271
									},
									"implementationOf": {
										"type": "reference",
										"name": "IBaklavaEvent.emit",
										"id": 38
									}
								}
							],
							"sources": [
								{
									"fileName": "src/events/eventEmitter.ts",
									"line": 52,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "BaklavaEvent.emit",
								"id": 271
							},
							"implementationOf": {
								"type": "reference",
								"name": "IBaklavaEvent.emit",
								"id": 37
							}
						},
						{
							"id": 284,
							"name": "removeListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 285,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Remove a listener"
									},
									"parameters": [
										{
											"id": 286,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "The token that was specified when subscribing to the listener.\nAn invalid token does not result in an error.\n"
											},
											"type": {
												"type": "reference",
												"name": "TokenType",
												"id": 316
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "BaklavaEvent.removeListener",
										"id": 268
									},
									"implementationOf": {
										"type": "reference",
										"name": "IBaklavaEvent.removeListener",
										"id": 35
									}
								}
							],
							"sources": [
								{
									"fileName": "src/events/eventEmitter.ts",
									"line": 26,
									"character": 25
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "BaklavaEvent.removeListener",
								"id": 268
							},
							"implementationOf": {
								"type": "reference",
								"name": "IBaklavaEvent.removeListener",
								"id": 34
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								279
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								280,
								276,
								284
							]
						}
					],
					"sources": [
						{
							"fileName": "src/events/eventEmitter.ts",
							"line": 45,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "BaklavaEvent",
							"id": 261,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T"
								}
							]
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IBaklavaEvent",
							"id": 28,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T"
								}
							]
						},
						{
							"type": "reference",
							"name": "IBaklavaEvent",
							"id": 28,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T"
								}
							]
						}
					]
				},
				{
					"id": 302,
					"name": "SequentialHook",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "This class will run the taps one after each other and pass the data from every tap to another."
					},
					"typeParameter": [
						{
							"id": 303,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 307,
							"name": "O",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 308,
							"name": "taps",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/events/eventEmitter.ts",
									"line": 67,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "reference",
										"name": "HookTap",
										"id": 322,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "T"
											},
											{
												"type": "typeParameter",
												"name": "O"
											}
										]
									}
								]
							},
							"defaultValue": " []",
							"inheritedFrom": {
								"type": "reference",
								"name": "Hook.taps",
								"id": 291
							}
						},
						{
							"id": 304,
							"name": "execute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 305,
									"name": "execute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 306,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "T"
									},
									"overwrites": {
										"type": "reference",
										"name": "Hook.execute",
										"id": 299
									},
									"implementationOf": {
										"type": "reference",
										"name": "IHook.execute",
										"id": 63
									}
								}
							],
							"sources": [
								{
									"fileName": "src/events/eventEmitter.ts",
									"line": 93,
									"character": 18
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "Hook.execute",
								"id": 299
							},
							"implementationOf": {
								"type": "reference",
								"name": "IHook.execute",
								"id": 62
							}
						},
						{
							"id": 309,
							"name": "tap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 310,
									"name": "tap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 311,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenType",
												"id": 316
											}
										},
										{
											"id": 312,
											"name": "tapFn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HookTap",
												"id": 322,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													},
													{
														"type": "typeParameter",
														"name": "O"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Hook.tap",
										"id": 292
									},
									"implementationOf": {
										"type": "reference",
										"name": "IHook.tap",
										"id": 56
									}
								}
							],
							"sources": [
								{
									"fileName": "src/events/eventEmitter.ts",
									"line": 69,
									"character": 14
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Hook.tap",
								"id": 292
							},
							"implementationOf": {
								"type": "reference",
								"name": "IHook.tap",
								"id": 55
							}
						},
						{
							"id": 313,
							"name": "untap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 314,
									"name": "untap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 315,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenType",
												"id": 316
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "Hook.untap",
										"id": 296
									},
									"implementationOf": {
										"type": "reference",
										"name": "IHook.untap",
										"id": 60
									}
								}
							],
							"sources": [
								{
									"fileName": "src/events/eventEmitter.ts",
									"line": 77,
									"character": 16
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "Hook.untap",
								"id": 296
							},
							"implementationOf": {
								"type": "reference",
								"name": "IHook.untap",
								"id": 59
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								308
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								304,
								309,
								313
							]
						}
					],
					"sources": [
						{
							"fileName": "src/events/eventEmitter.ts",
							"line": 91,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "Hook",
							"id": 287,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T"
								}
							]
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "IHook",
							"id": 52,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T"
								},
								{
									"type": "typeParameter",
									"name": "O"
								}
							]
						}
					]
				},
				{
					"id": 322,
					"name": "HookTap",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 323,
							"name": "I",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 324,
							"name": "O",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"sources": [
						{
							"fileName": "src/events/eventEmitter.ts",
							"line": 5,
							"character": 19
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 325,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 326,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 327,
											"name": "i",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "I"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "O"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/events/eventEmitter.ts",
									"line": 5,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 317,
					"name": "Listener",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 318,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"sources": [
						{
							"fileName": "src/events/eventEmitter.ts",
							"line": 4,
							"character": 20
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 319,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 320,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 321,
											"name": "ev",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/events/eventEmitter.ts",
									"line": 4,
									"character": 25
								}
							]
						}
					}
				},
				{
					"id": 316,
					"name": "TokenType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/events/eventEmitter.ts",
							"line": 3,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "object"
							},
							{
								"type": "intrinsic",
								"name": "symbol"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						261,
						287,
						274,
						302
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						322,
						317,
						316
					]
				}
			],
			"sources": [
				{
					"fileName": "src/events/eventEmitter.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 328,
			"name": "\"src/events/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/src/events/index.ts",
			"sources": [
				{
					"fileName": "src/events/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 1,
			"name": "\"src/idGenerator\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/src/idGenerator.ts",
			"children": [
				{
					"id": 2,
					"name": "counter",
					"kind": 32,
					"kindString": "Variable",
					"flags": {
						"isLet": true
					},
					"sources": [
						{
							"fileName": "src/idGenerator.ts",
							"line": 1,
							"character": 11
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 3,
					"name": "generateId",
					"kind": 64,
					"kindString": "Function",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 4,
							"name": "generateId",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/idGenerator.ts",
							"line": 3,
							"character": 34
						}
					]
				}
			],
			"groups": [
				{
					"title": "Variables",
					"kind": 32,
					"children": [
						2
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						3
					]
				}
			],
			"sources": [
				{
					"fileName": "src/idGenerator.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 613,
			"name": "\"src/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/src/index.ts",
			"sources": [
				{
					"fileName": "src/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 414,
			"name": "\"src/node\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/src/node.ts",
			"children": [
				{
					"id": 419,
					"name": "Node",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true,
						"isAbstract": true
					},
					"comment": {
						"shortText": "Abstract base class for every node"
					},
					"children": [
						{
							"id": 439,
							"name": "editorInstance",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 57,
									"character": 26
								}
							],
							"type": {
								"type": "reference",
								"name": "Editor",
								"id": 330
							}
						},
						{
							"id": 422,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Unique identifier of the node"
							},
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 25,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": " \"node_\" + generateId()",
							"implementationOf": {
								"type": "reference",
								"name": "INode.id",
								"id": 179
							}
						},
						{
							"id": 423,
							"name": "interfaces",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "A map of all interfaces of the node.\n| Key = Name of the interface\n| Value = [[NodeInterface]] instance"
							},
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 30,
									"character": 21
								}
							],
							"type": {
								"type": "reference",
								"name": "Map",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "NodeInterface",
										"id": 493
									}
								]
							},
							"defaultValue": " new Map()",
							"implementationOf": {
								"type": "reference",
								"name": "INode.interfaces",
								"id": 180
							}
						},
						{
							"id": 421,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true,
								"isAbstract": true
							},
							"comment": {
								"shortText": "Customizable display name of the node."
							},
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 23,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "INode.name",
								"id": 178
							}
						},
						{
							"id": 424,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "A map of all options of the node.\n| Key = Name of the option\n| Value = [[NodeOption]] instance"
							},
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 35,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "Map",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "NodeOption",
										"id": 398
									}
								]
							},
							"defaultValue": " new Map()",
							"implementationOf": {
								"type": "reference",
								"name": "INode.options",
								"id": 181
							}
						},
						{
							"id": 425,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Use this property to save additional state of the node"
							},
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 38,
									"character": 16
								}
							],
							"type": {
								"type": "reference",
								"name": "Record",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "INode.state",
								"id": 182
							}
						},
						{
							"id": 420,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true,
								"isAbstract": true
							},
							"comment": {
								"shortText": "Type of the node"
							},
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 21,
									"character": 24
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "INode.type",
								"id": 177
							}
						},
						{
							"id": 440,
							"name": "inputInterfaces",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "All input interfaces of the node"
							},
							"getSignature": [
								{
									"id": 441,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "All input interfaces of the node"
									},
									"type": {
										"type": "reference",
										"name": "Record",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "NodeInterface",
												"id": 493
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 60,
									"character": 30
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "INode.inputInterfaces",
								"id": 198
							}
						},
						{
							"id": 442,
							"name": "outputInterfaces",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "All output interfaces of the node"
							},
							"getSignature": [
								{
									"id": 443,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"comment": {
										"shortText": "All output interfaces of the node"
									},
									"type": {
										"type": "reference",
										"name": "Record",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "NodeInterface",
												"id": 493
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 69,
									"character": 31
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "INode.outputInterfaces",
								"id": 199
							}
						},
						{
							"id": 451,
							"name": "addInputInterface",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 452,
									"name": "addInputInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add an input interface to the node",
										"returns": "The created interface or undefined, if the interface was not created\n"
									},
									"parameters": [
										{
											"id": 453,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the interface"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 454,
											"name": "option",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optional name of a NodeOption which is displayed when the interface is not connected"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 455,
											"name": "defaultValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optional default value for the interface/option"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 456,
											"name": "additionalProperties",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Additional properties of the interface that can be used by plugins"
											},
											"type": {
												"type": "reference",
												"name": "Record",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "NodeInterface",
												"id": 493
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 123,
									"character": 31
								}
							]
						},
						{
							"id": 487,
							"name": "addInterface",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 488,
									"name": "addInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 489,
											"name": "isInput",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 490,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 491,
											"name": "option",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NodeInterface",
										"id": 493
									}
								}
							],
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 254,
									"character": 24
								}
							]
						},
						{
							"id": 464,
							"name": "addOption",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 465,
									"name": "addOption",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a node option to the node",
										"returns": "The created option or undefined, if the option was not created\n"
									},
									"parameters": [
										{
											"id": 466,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the option"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 467,
											"name": "component",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the option component"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 468,
											"name": "defaultValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Default value for the option"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											},
											"defaultValue": " null"
										},
										{
											"id": 469,
											"name": "sidebarComponent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optional name of the component to display in the sidebar"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 470,
											"name": "additionalProperties",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Additional properties of the option that can be used by plugins"
											},
											"type": {
												"type": "reference",
												"name": "Record",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "NodeOption",
												"id": 398
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 187,
									"character": 23
								}
							]
						},
						{
							"id": 457,
							"name": "addOutputInterface",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 458,
									"name": "addOutputInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add an output interface to the node",
										"returns": "The created interface or undefined, if the interface was not created\n"
									},
									"parameters": [
										{
											"id": 459,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the interface"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 460,
											"name": "additionalProperties",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Additional properties of the interface that can be used by plugins"
											},
											"type": {
												"type": "reference",
												"name": "Record",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "undefined"
											},
											{
												"type": "reference",
												"name": "NodeInterface",
												"id": 493
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 139,
									"character": 32
								}
							]
						},
						{
							"id": 449,
							"name": "calculate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 450,
									"name": "calculate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "The default implementation does nothing.\nOverwrite this method to do calculation.",
										"returns": "This method can return a promise.\n"
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"implementationOf": {
										"type": "reference",
										"name": "INode.calculate",
										"id": 206
									}
								}
							],
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 111,
									"character": 20
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "INode.calculate",
								"id": 205
							}
						},
						{
							"id": 474,
							"name": "getInterface",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 475,
									"name": "getInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get an interface by its name. If the node does not have an interface with\n`name`, this method will throw an error."
									},
									"parameters": [
										{
											"id": 476,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the requested interface\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NodeInterface",
										"id": 493
									},
									"implementationOf": {
										"type": "reference",
										"name": "INode.getInterface",
										"id": 208
									}
								}
							],
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 216,
									"character": 23
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "INode.getInterface",
								"id": 207
							}
						},
						{
							"id": 477,
							"name": "getOptionValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 478,
									"name": "getOptionValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Get the value of option `name`"
									},
									"parameters": [
										{
											"id": 479,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the option\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									},
									"implementationOf": {
										"type": "reference",
										"name": "INode.getOptionValue",
										"id": 211
									}
								}
							],
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 227,
									"character": 25
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "INode.getOptionValue",
								"id": 210
							}
						},
						{
							"id": 444,
							"name": "load",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 445,
									"name": "load",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 446,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "INodeState",
												"id": 10
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "INode.load",
										"id": 201
									}
								}
							],
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 77,
									"character": 15
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "INode.load",
								"id": 200
							}
						},
						{
							"id": 484,
							"name": "registerEditor",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 485,
									"name": "registerEditor",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "This function will automatically be called as soon as the node is added to an editor."
									},
									"parameters": [
										{
											"id": 486,
											"name": "editor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Editor instance\n"
											},
											"type": {
												"type": "reference",
												"name": "Editor",
												"id": 330
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 250,
									"character": 25
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "INode.registerEditor",
								"id": 217
							}
						},
						{
							"id": 461,
							"name": "removeInterface",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 462,
									"name": "removeInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Remove an existing interface"
									},
									"parameters": [
										{
											"id": 463,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the interface.\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 151,
									"character": 29
								}
							]
						},
						{
							"id": 471,
							"name": "removeOption",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isProtected": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 472,
									"name": "removeOption",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Remove an existing option"
									},
									"parameters": [
										{
											"id": 473,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the option\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 202,
									"character": 26
								}
							]
						},
						{
							"id": 447,
							"name": "save",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 448,
									"name": "save",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "INodeState",
										"id": 10
									},
									"implementationOf": {
										"type": "reference",
										"name": "INode.save",
										"id": 204
									}
								}
							],
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 94,
									"character": 15
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "INode.save",
								"id": 203
							}
						},
						{
							"id": 480,
							"name": "setOptionValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 481,
									"name": "setOptionValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set the value of option `name`"
									},
									"parameters": [
										{
											"id": 482,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the option"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 483,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "New value\n"
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "INode.setOptionValue",
										"id": 214
									}
								}
							],
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 239,
									"character": 25
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "INode.setOptionValue",
								"id": 213
							}
						},
						{
							"id": 426,
							"name": "events",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 428,
									"name": "addInterface",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/node.ts",
											"line": 42,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"name": "BaklavaEvent",
										"id": 261,
										"typeArguments": [
											{
												"type": "reference",
												"name": "NodeInterface",
												"id": 493
											}
										]
									},
									"defaultValue": " new BaklavaEvent<NodeInterface>()"
								},
								{
									"id": 432,
									"name": "addOption",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/node.ts",
											"line": 46,
											"character": 17
										}
									],
									"type": {
										"type": "reference",
										"name": "BaklavaEvent",
										"id": 261,
										"typeArguments": [
											{
												"type": "reference",
												"name": "IOptionEventData",
												"id": 168
											}
										]
									},
									"defaultValue": " new BaklavaEvent<IOptionEventData>()"
								},
								{
									"id": 427,
									"name": "beforeAddInterface",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/node.ts",
											"line": 41,
											"character": 26
										}
									],
									"type": {
										"type": "reference",
										"name": "PreventableBaklavaEvent",
										"id": 274,
										"typeArguments": [
											{
												"type": "reference",
												"name": "IAddInterfaceEventData",
												"id": 158
											}
										]
									},
									"defaultValue": " new PreventableBaklavaEvent<IAddInterfaceEventData>()"
								},
								{
									"id": 431,
									"name": "beforeAddOption",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/node.ts",
											"line": 45,
											"character": 23
										}
									],
									"type": {
										"type": "reference",
										"name": "PreventableBaklavaEvent",
										"id": 274,
										"typeArguments": [
											{
												"type": "reference",
												"name": "IAddOptionEventData",
												"id": 163
											}
										]
									},
									"defaultValue": " new PreventableBaklavaEvent<IAddOptionEventData>()"
								},
								{
									"id": 429,
									"name": "beforeRemoveInterface",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/node.ts",
											"line": 43,
											"character": 29
										}
									],
									"type": {
										"type": "reference",
										"name": "PreventableBaklavaEvent",
										"id": 274,
										"typeArguments": [
											{
												"type": "reference",
												"name": "NodeInterface",
												"id": 493
											}
										]
									},
									"defaultValue": " new PreventableBaklavaEvent<NodeInterface>()"
								},
								{
									"id": 433,
									"name": "beforeRemoveOption",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/node.ts",
											"line": 47,
											"character": 26
										}
									],
									"type": {
										"type": "reference",
										"name": "PreventableBaklavaEvent",
										"id": 274,
										"typeArguments": [
											{
												"type": "reference",
												"name": "IOptionEventData",
												"id": 168
											}
										]
									},
									"defaultValue": " new PreventableBaklavaEvent<IOptionEventData>()"
								},
								{
									"id": 430,
									"name": "removeInterface",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/node.ts",
											"line": 44,
											"character": 23
										}
									],
									"type": {
										"type": "reference",
										"name": "BaklavaEvent",
										"id": 261,
										"typeArguments": [
											{
												"type": "reference",
												"name": "NodeInterface",
												"id": 493
											}
										]
									},
									"defaultValue": " new BaklavaEvent<NodeInterface>()"
								},
								{
									"id": 434,
									"name": "removeOption",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/node.ts",
											"line": 48,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"name": "BaklavaEvent",
										"id": 261,
										"typeArguments": [
											{
												"type": "reference",
												"name": "IOptionEventData",
												"id": 168
											}
										]
									},
									"defaultValue": " new BaklavaEvent<IOptionEventData>()"
								},
								{
									"id": 435,
									"name": "update",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/node.ts",
											"line": 49,
											"character": 14
										}
									],
									"type": {
										"type": "reference",
										"name": "BaklavaEvent",
										"id": 261,
										"typeArguments": [
											{
												"type": "reference",
												"name": "INodeUpdateEventData",
												"id": 171
											}
										]
									},
									"defaultValue": " new BaklavaEvent<INodeUpdateEventData>()"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										428,
										432,
										427,
										431,
										429,
										433,
										430,
										434,
										435
									]
								}
							],
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 40,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"implementationOf": {
								"type": "reference",
								"name": "INode.events",
								"id": 183
							}
						},
						{
							"id": 436,
							"name": "hooks",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 437,
									"name": "load",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/node.ts",
											"line": 53,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "SequentialHook",
										"id": 302,
										"typeArguments": [
											{
												"type": "reference",
												"name": "INodeState",
												"id": 10
											}
										]
									},
									"defaultValue": " new SequentialHook<INodeState>()"
								},
								{
									"id": 438,
									"name": "save",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/node.ts",
											"line": 54,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "SequentialHook",
										"id": 302,
										"typeArguments": [
											{
												"type": "reference",
												"name": "INodeState",
												"id": 10
											}
										]
									},
									"defaultValue": " new SequentialHook<INodeState>()"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										437,
										438
									]
								}
							],
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 52,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"implementationOf": {
								"type": "reference",
								"name": "INode.hooks",
								"id": 194
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								439,
								422,
								423,
								421,
								424,
								425,
								420
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								440,
								442
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								451,
								487,
								464,
								457,
								449,
								474,
								477,
								444,
								484,
								461,
								471,
								447,
								480
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								426,
								436
							]
						}
					],
					"sources": [
						{
							"fileName": "src/node.ts",
							"line": 18,
							"character": 26
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "INode",
							"id": 176
						}
					]
				},
				{
					"id": 415,
					"name": "IInterfaceCreateOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 417,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 11,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 418,
							"name": "optionName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 12,
									"character": 14
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 416,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/node.ts",
									"line": 10,
									"character": 8
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								417,
								418,
								416
							]
						}
					],
					"sources": [
						{
							"fileName": "src/node.ts",
							"line": 9,
							"character": 40
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						419
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						415
					]
				}
			],
			"sources": [
				{
					"fileName": "src/node.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 547,
			"name": "\"src/nodeBuilder\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/src/nodeBuilder.ts",
			"children": [
				{
					"id": 559,
					"name": "NodeBuilder",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Utility class for creating custom nodes"
					},
					"children": [
						{
							"id": 565,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 566,
									"name": "new NodeBuilder",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 567,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NodeBuilder",
										"id": 559
									}
								}
							],
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 69,
									"character": 47
								}
							]
						},
						{
							"id": 564,
							"name": "calcFunction",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 69,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "CalculationFunction",
								"id": 596
							}
						},
						{
							"id": 562,
							"name": "intfs",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 67,
									"character": 17
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IInterfaceOptions",
									"id": 548
								}
							},
							"defaultValue": " []"
						},
						{
							"id": 561,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 66,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 563,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 68,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "Map",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "INodeOptionParameters",
										"id": 554
									}
								]
							},
							"defaultValue": " new Map()"
						},
						{
							"id": 560,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 65,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"\""
						},
						{
							"id": 573,
							"name": "addInputInterface",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 574,
									"name": "addInputInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add an input interface to the node",
										"returns": "Current node builder instance for chaining\n"
									},
									"parameters": [
										{
											"id": 575,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the interface"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 576,
											"name": "option",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "A node option component to be displayed when the interface is not connected"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 577,
											"name": "defaultValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "\nDefault value for the interface.\nIf the default value is a primitive (e. g. string, number) then the value can be passed directly.\nFor objects provide a function that returns the default value."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 578,
											"name": "additionalProperties",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Additional properties of the interface that can be used by plugins"
											},
											"type": {
												"type": "reference",
												"name": "Record",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NodeBuilder",
										"id": 559
									}
								}
							],
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 107,
									"character": 28
								}
							]
						},
						{
							"id": 583,
							"name": "addOption",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 584,
									"name": "addOption",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add a node option to the node",
										"returns": "Current node builder instance for chaining\n"
									},
									"parameters": [
										{
											"id": 585,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the option"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 586,
											"name": "optionComponent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 587,
											"name": "defaultValue",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "\nDefault value for the option.\nIf the default value is a primitive (e. g. string, number) then the value can be passed directly.\nFor objects provide a function that returns the default value."
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 588,
											"name": "sidebarComponent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Optional component to display in the sidebar"
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 589,
											"name": "additionalProperties",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Additional properties of the option that can be used by plugins"
											},
											"type": {
												"type": "reference",
												"name": "Record",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NodeBuilder",
										"id": 559
									}
								}
							],
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 136,
									"character": 20
								}
							]
						},
						{
							"id": 579,
							"name": "addOutputInterface",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 580,
									"name": "addOutputInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Add an output interface to the node",
										"returns": "Current node builder instance for chaining\n"
									},
									"parameters": [
										{
											"id": 581,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Name of the interface"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 582,
											"name": "additionalProperties",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"comment": {
												"text": "Additional properties of the interface that can be used by plugins"
											},
											"type": {
												"type": "reference",
												"name": "Record",
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "string"
													},
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NodeBuilder",
										"id": 559
									}
								}
							],
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 119,
									"character": 29
								}
							]
						},
						{
							"id": 568,
							"name": "build",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 569,
									"name": "build",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Build the node class.\nThis must be called as the last operation when building a node.",
										"returns": "The generated node class\n"
									},
									"type": {
										"type": "reference",
										"name": "NodeConstructorImpl",
										"id": 601
									}
								}
							],
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 81,
									"character": 16
								}
							]
						},
						{
							"id": 593,
							"name": "checkDefaultValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 594,
									"name": "checkDefaultValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 595,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 161,
									"character": 29
								}
							]
						},
						{
							"id": 590,
							"name": "onCalculate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 591,
									"name": "onCalculate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Register a callback for the calculation function.\nThe callback will receive the node instance as first parameter.\n(If you do not use ES6 arrow functions, the node instance\nwill also be bound to `this`)",
										"returns": "Current node builder instance for chaining\n"
									},
									"parameters": [
										{
											"id": 592,
											"name": "cb",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "Callback to be executed when `calculate()` is called on the node"
											},
											"type": {
												"type": "reference",
												"name": "CalculationFunction",
												"id": 596
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NodeBuilder",
										"id": 559
									}
								}
							],
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 156,
									"character": 22
								}
							]
						},
						{
							"id": 570,
							"name": "setName",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 571,
									"name": "setName",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"comment": {
										"shortText": "Set a display name for the node.",
										"returns": "Current node builder instance for chaining\n"
									},
									"parameters": [
										{
											"id": 572,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"comment": {
												"text": "New name of the node"
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NodeBuilder",
										"id": 559
									}
								}
							],
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 90,
									"character": 18
								}
							]
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								565
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								564,
								562,
								561,
								563,
								560
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								573,
								583,
								579,
								568,
								593,
								590,
								570
							]
						}
					],
					"sources": [
						{
							"fileName": "src/nodeBuilder.ts",
							"line": 63,
							"character": 24
						}
					]
				},
				{
					"id": 548,
					"name": "IInterfaceOptions",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 553,
							"name": "additionalProperties",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 9,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "Record",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 552,
							"name": "defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 8,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 549,
							"name": "isInput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 5,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 550,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 6,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 551,
							"name": "option",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 7,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								553,
								552,
								549,
								550,
								551
							]
						}
					],
					"sources": [
						{
							"fileName": "src/nodeBuilder.ts",
							"line": 4,
							"character": 27
						}
					]
				},
				{
					"id": 554,
					"name": "INodeOptionParameters",
					"kind": 256,
					"kindString": "Interface",
					"flags": {},
					"children": [
						{
							"id": 558,
							"name": "additionalProperties",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 16,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "Record",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 556,
							"name": "optionComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 14,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 557,
							"name": "sidebarComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 15,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 555,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {},
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 13,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								558,
								556,
								557,
								555
							]
						}
					],
					"sources": [
						{
							"fileName": "src/nodeBuilder.ts",
							"line": 12,
							"character": 31
						}
					]
				},
				{
					"id": 596,
					"name": "CalculationFunction",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "src/nodeBuilder.ts",
							"line": 19,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 597,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 598,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 599,
											"name": "this",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Node",
												"id": 419
											}
										},
										{
											"id": 600,
											"name": "n",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Node",
												"id": 419
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 19,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 601,
					"name": "NodeConstructorImpl",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {},
					"sources": [
						{
							"fileName": "src/nodeBuilder.ts",
							"line": 20,
							"character": 24
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 602,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "src/nodeBuilder.ts",
									"line": 20,
									"character": 26
								}
							]
						}
					}
				},
				{
					"id": 606,
					"name": "generateNode",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 607,
							"name": "generateNode",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 608,
									"name": "type",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 609,
									"name": "name",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 610,
									"name": "intfs",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"name": "IInterfaceOptions",
											"id": 548
										}
									}
								},
								{
									"id": 611,
									"name": "options",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "Map",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "INodeOptionParameters",
												"id": 554
											}
										]
									}
								},
								{
									"id": 612,
									"name": "calcFunction",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"name": "CalculationFunction",
										"id": 596
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "(Anonymous class)"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/nodeBuilder.ts",
							"line": 30,
							"character": 21
						}
					]
				},
				{
					"id": 603,
					"name": "getDefaultValue",
					"kind": 64,
					"kindString": "Function",
					"flags": {},
					"signatures": [
						{
							"id": 604,
							"name": "getDefaultValue",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 605,
									"name": "v",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/nodeBuilder.ts",
							"line": 22,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						559
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						548,
						554
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						596,
						601
					]
				},
				{
					"title": "Functions",
					"kind": 64,
					"children": [
						606,
						603
					]
				}
			],
			"sources": [
				{
					"fileName": "src/nodeBuilder.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 492,
			"name": "\"src/nodeInterface\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/src/nodeInterface.ts",
			"children": [
				{
					"id": 493,
					"name": "NodeInterface",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 515,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 516,
									"name": "new NodeInterface",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 517,
											"name": "parent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "INode",
												"id": 176
											}
										},
										{
											"id": 518,
											"name": "isInput",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NodeInterface",
										"id": 493
									}
								}
							],
							"sources": [
								{
									"fileName": "src/nodeInterface.ts",
									"line": 42,
									"character": 5
								}
							]
						},
						{
							"id": 505,
							"name": "_connectionCount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/nodeInterface.ts",
									"line": 25,
									"character": 28
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0"
						},
						{
							"id": 510,
							"name": "_value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/nodeInterface.ts",
									"line": 34,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"defaultValue": " null"
						},
						{
							"id": 494,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/nodeInterface.ts",
									"line": 9,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "INodeInterface.id",
								"id": 222
							}
						},
						{
							"id": 495,
							"name": "isInput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/nodeInterface.ts",
									"line": 10,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"implementationOf": {
								"type": "reference",
								"name": "INodeInterface.isInput",
								"id": 223
							}
						},
						{
							"id": 497,
							"name": "option",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "src/nodeInterface.ts",
									"line": 12,
									"character": 17
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "INodeInterface.option",
								"id": 225
							}
						},
						{
							"id": 496,
							"name": "parent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/nodeInterface.ts",
									"line": 11,
									"character": 17
								}
							],
							"type": {
								"type": "reference",
								"name": "INode",
								"id": 176
							},
							"implementationOf": {
								"type": "reference",
								"name": "INodeInterface.parent",
								"id": 224
							}
						},
						{
							"id": 506,
							"name": "connectionCount",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 509,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"setSignature": [
								{
									"id": 507,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 508,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/nodeInterface.ts",
									"line": 26,
									"character": 30
								},
								{
									"fileName": "src/nodeInterface.ts",
									"line": 30,
									"character": 30
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "INodeInterface.connectionCount",
								"id": 231
							}
						},
						{
							"id": 511,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 514,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"setSignature": [
								{
									"id": 512,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 513,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/nodeInterface.ts",
									"line": 35,
									"character": 20
								},
								{
									"fileName": "src/nodeInterface.ts",
									"line": 40,
									"character": 20
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "INodeInterface.value",
								"id": 232
							}
						},
						{
							"id": 519,
							"name": "load",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 520,
									"name": "load",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 521,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IInterfaceState",
												"id": 18
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"implementationOf": {
										"type": "reference",
										"name": "INodeInterface.load",
										"id": 234
									}
								}
							],
							"sources": [
								{
									"fileName": "src/nodeInterface.ts",
									"line": 50,
									"character": 15
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "INodeInterface.load",
								"id": 233
							}
						},
						{
							"id": 522,
							"name": "save",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 523,
									"name": "save",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IInterfaceState",
										"id": 18
									},
									"implementationOf": {
										"type": "reference",
										"name": "INodeInterface.save",
										"id": 237
									}
								}
							],
							"sources": [
								{
									"fileName": "src/nodeInterface.ts",
									"line": 56,
									"character": 15
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "INodeInterface.save",
								"id": 236
							}
						},
						{
							"id": 498,
							"name": "events",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 500,
									"name": "beforeSetValue",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/nodeInterface.ts",
											"line": 16,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"name": "PreventableBaklavaEvent",
										"id": 274,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									},
									"defaultValue": " new PreventableBaklavaEvent<any>()"
								},
								{
									"id": 499,
									"name": "setConnectionCount",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/nodeInterface.ts",
											"line": 15,
											"character": 26
										}
									],
									"type": {
										"type": "reference",
										"name": "BaklavaEvent",
										"id": 261,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									},
									"defaultValue": " new BaklavaEvent<number>()"
								},
								{
									"id": 501,
									"name": "setValue",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/nodeInterface.ts",
											"line": 17,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"name": "BaklavaEvent",
										"id": 261,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									},
									"defaultValue": " new BaklavaEvent<any>()"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										500,
										499,
										501
									]
								}
							],
							"sources": [
								{
									"fileName": "src/nodeInterface.ts",
									"line": 14,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"implementationOf": {
								"type": "reference",
								"name": "INodeInterface.events",
								"id": 226
							}
						},
						{
							"id": 502,
							"name": "hooks",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 503,
									"name": "load",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/nodeInterface.ts",
											"line": 21,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "SequentialHook",
										"id": 302,
										"typeArguments": [
											{
												"type": "reference",
												"name": "IInterfaceState",
												"id": 18
											}
										]
									},
									"defaultValue": " new SequentialHook<IInterfaceState>()"
								},
								{
									"id": 504,
									"name": "save",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/nodeInterface.ts",
											"line": 22,
											"character": 12
										}
									],
									"type": {
										"type": "reference",
										"name": "SequentialHook",
										"id": 302,
										"typeArguments": [
											{
												"type": "reference",
												"name": "IInterfaceState",
												"id": 18
											}
										]
									},
									"defaultValue": " new SequentialHook<IInterfaceState>()"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										503,
										504
									]
								}
							],
							"sources": [
								{
									"fileName": "src/nodeInterface.ts",
									"line": 20,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								515
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								505,
								510,
								494,
								495,
								497,
								496
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								506,
								511
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								519,
								522
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								498,
								502
							]
						}
					],
					"sources": [
						{
							"fileName": "src/nodeInterface.ts",
							"line": 7,
							"character": 26
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "INodeInterface",
							"id": 221
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						493
					]
				}
			],
			"sources": [
				{
					"fileName": "src/nodeInterface.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 397,
			"name": "\"src/nodeOption\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/src/nodeOption.ts",
			"children": [
				{
					"id": 398,
					"name": "NodeOption",
					"kind": 128,
					"kindString": "Class",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 405,
							"name": "constructor",
							"kind": 512,
							"kindString": "Constructor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"signatures": [
								{
									"id": 406,
									"name": "new NodeOption",
									"kind": 16384,
									"kindString": "Constructor signature",
									"flags": {},
									"parameters": [
										{
											"id": 407,
											"name": "optionComponent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 408,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 409,
											"name": "sidebarComponent",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "NodeOption",
										"id": 398
									}
								}
							],
							"sources": [
								{
									"fileName": "src/nodeOption.ts",
									"line": 16,
									"character": 24
								}
							]
						},
						{
							"id": 404,
							"name": "_value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPrivate": true,
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/nodeOption.ts",
									"line": 16,
									"character": 18
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 399,
							"name": "optionComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"comment": {
								"shortText": "Name of the component that should be displayed for the option"
							},
							"sources": [
								{
									"fileName": "src/nodeOption.ts",
									"line": 7,
									"character": 26
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"implementationOf": {
								"type": "reference",
								"name": "INodeOption.optionComponent",
								"id": 143
							}
						},
						{
							"id": 400,
							"name": "sidebarComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isPublic": true,
								"isExported": true,
								"isOptional": true
							},
							"comment": {
								"shortText": "Name of the component that should be displayed in the sidebar"
							},
							"sources": [
								{
									"fileName": "src/nodeOption.ts",
									"line": 9,
									"character": 27
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							},
							"implementationOf": {
								"type": "reference",
								"name": "INodeOption.sidebarComponent",
								"id": 145
							}
						},
						{
							"id": 410,
							"name": "value",
							"kind": 262144,
							"kindString": "Accessor",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"getSignature": [
								{
									"id": 411,
									"name": "__get",
									"kind": 524288,
									"kindString": "Get signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"setSignature": [
								{
									"id": 412,
									"name": "__set",
									"kind": 1048576,
									"kindString": "Set signature",
									"flags": {},
									"parameters": [
										{
											"id": 413,
											"name": "v",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/nodeOption.ts",
									"line": 24,
									"character": 20
								},
								{
									"fileName": "src/nodeOption.ts",
									"line": 28,
									"character": 20
								}
							],
							"implementationOf": {
								"type": "reference",
								"name": "INodeOption.value",
								"id": 144
							}
						},
						{
							"id": 401,
							"name": "events",
							"kind": 2097152,
							"kindString": "Object literal",
							"flags": {
								"isPublic": true,
								"isExported": true
							},
							"children": [
								{
									"id": 402,
									"name": "beforeSetValue",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/nodeOption.ts",
											"line": 12,
											"character": 22
										}
									],
									"type": {
										"type": "reference",
										"name": "PreventableBaklavaEvent",
										"id": 274,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									},
									"defaultValue": " new PreventableBaklavaEvent<any>()"
								},
								{
									"id": 403,
									"name": "setValue",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/nodeOption.ts",
											"line": 13,
											"character": 16
										}
									],
									"type": {
										"type": "reference",
										"name": "BaklavaEvent",
										"id": 261,
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									},
									"defaultValue": " new BaklavaEvent<any>()"
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										402,
										403
									]
								}
							],
							"sources": [
								{
									"fileName": "src/nodeOption.ts",
									"line": 11,
									"character": 17
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "object"
							},
							"implementationOf": {
								"type": "reference",
								"name": "INodeOption.events",
								"id": 146
							}
						}
					],
					"groups": [
						{
							"title": "Constructors",
							"kind": 512,
							"children": [
								405
							]
						},
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								404,
								399,
								400
							]
						},
						{
							"title": "Accessors",
							"kind": 262144,
							"children": [
								410
							]
						},
						{
							"title": "Object literals",
							"kind": 2097152,
							"children": [
								401
							]
						}
					],
					"sources": [
						{
							"fileName": "src/nodeOption.ts",
							"line": 4,
							"character": 23
						}
					],
					"implementedTypes": [
						{
							"type": "reference",
							"name": "INodeOption",
							"id": 142
						}
					]
				}
			],
			"groups": [
				{
					"title": "Classes",
					"kind": 128,
					"children": [
						398
					]
				}
			],
			"sources": [
				{
					"fileName": "src/nodeOption.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 238,
			"name": "\"types/connection\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/types/connection.ts",
			"children": [
				{
					"id": 239,
					"name": "TemporaryConnectionState",
					"kind": 4,
					"kindString": "Enumeration",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 241,
							"name": "ALLOWED",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/connection.ts",
									"line": 5,
									"character": 11
								}
							]
						},
						{
							"id": 242,
							"name": "FORBIDDEN",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/connection.ts",
									"line": 6,
									"character": 13
								}
							]
						},
						{
							"id": 240,
							"name": "NONE",
							"kind": 16,
							"kindString": "Enumeration member",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/connection.ts",
									"line": 4,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Enumeration members",
							"kind": 16,
							"children": [
								241,
								242,
								240
							]
						}
					],
					"sources": [
						{
							"fileName": "types/connection.ts",
							"line": 3,
							"character": 36
						}
					]
				},
				{
					"id": 249,
					"name": "IConnection",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 251,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/connection.ts",
									"line": 19,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "INodeInterface",
								"id": 221
							}
						},
						{
							"id": 250,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/connection.ts",
									"line": 18,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 252,
							"name": "to",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/connection.ts",
									"line": 20,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "INodeInterface",
								"id": 221
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								251,
								250,
								252
							]
						}
					],
					"sources": [
						{
							"fileName": "types/connection.ts",
							"line": 17,
							"character": 28
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "ITransferConnection",
							"id": 253
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "DummyConnection",
							"id": 539
						}
					]
				},
				{
					"id": 243,
					"name": "ITemporaryConnection",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 245,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/connection.ts",
									"line": 11,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "INodeInterface",
								"id": 221
							}
						},
						{
							"id": 247,
							"name": "mx",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/connection.ts",
									"line": 13,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 248,
							"name": "my",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/connection.ts",
									"line": 14,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						},
						{
							"id": 244,
							"name": "status",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/connection.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "TemporaryConnectionState",
								"id": 239
							}
						},
						{
							"id": 246,
							"name": "to",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/connection.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "INodeInterface",
								"id": 221
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								245,
								247,
								248,
								244,
								246
							]
						}
					],
					"sources": [
						{
							"fileName": "types/connection.ts",
							"line": 9,
							"character": 37
						}
					]
				},
				{
					"id": 253,
					"name": "ITransferConnection",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 255,
							"name": "destructed",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/connection.ts",
									"line": 25,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 257,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/connection.ts",
									"line": 19,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "INodeInterface",
								"id": 221
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IConnection.from",
								"id": 251
							}
						},
						{
							"id": 256,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/connection.ts",
									"line": 18,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IConnection.id",
								"id": 250
							}
						},
						{
							"id": 254,
							"name": "isInDanger",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/connection.ts",
									"line": 24,
									"character": 14
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 258,
							"name": "to",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/connection.ts",
									"line": 20,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "INodeInterface",
								"id": 221
							},
							"inheritedFrom": {
								"type": "reference",
								"name": "IConnection.to",
								"id": 252
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								255,
								257,
								256,
								254,
								258
							]
						}
					],
					"sources": [
						{
							"fileName": "types/connection.ts",
							"line": 23,
							"character": 36
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IConnection",
							"id": 249
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "Connection",
							"id": 525
						}
					]
				}
			],
			"groups": [
				{
					"title": "Enumerations",
					"kind": 4,
					"children": [
						239
					]
				},
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						249,
						243,
						253
					]
				}
			],
			"sources": [
				{
					"fileName": "types/connection.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 83,
			"name": "\"types/editor\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/types/editor.ts",
			"children": [
				{
					"id": 84,
					"name": "IEditor",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 105,
							"name": "connections",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/editor.ts",
									"line": 35,
									"character": 24
								}
							],
							"type": {
								"type": "reference",
								"name": "ReadonlyArray",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IConnection",
										"id": 249
									}
								]
							}
						},
						{
							"id": 85,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/editor.ts",
									"line": 13,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 86,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 94,
											"name": "addConnection",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/editor.ts",
													"line": 21,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "IBaklavaEvent",
												"id": 28,
												"typeArguments": [
													{
														"type": "reference",
														"name": "IConnection",
														"id": 249
													}
												]
											}
										},
										{
											"id": 90,
											"name": "addNode",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/editor.ts",
													"line": 17,
													"character": 15
												}
											],
											"type": {
												"type": "reference",
												"name": "IBaklavaEvent",
												"id": 28,
												"typeArguments": [
													{
														"type": "reference",
														"name": "INode",
														"id": 176
													}
												]
											}
										},
										{
											"id": 93,
											"name": "beforeAddConnection",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/editor.ts",
													"line": 20,
													"character": 27
												}
											],
											"type": {
												"type": "reference",
												"name": "IPreventableBaklavaEvent",
												"id": 40,
												"typeArguments": [
													{
														"type": "reference",
														"name": "IAddConnectionEventData",
														"id": 151
													}
												]
											}
										},
										{
											"id": 89,
											"name": "beforeAddNode",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/editor.ts",
													"line": 16,
													"character": 21
												}
											],
											"type": {
												"type": "reference",
												"name": "IPreventableBaklavaEvent",
												"id": 40,
												"typeArguments": [
													{
														"type": "reference",
														"name": "INode",
														"id": 176
													}
												]
											}
										},
										{
											"id": 87,
											"name": "beforeRegisterNodeType",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/editor.ts",
													"line": 14,
													"character": 30
												}
											],
											"type": {
												"type": "reference",
												"name": "IPreventableBaklavaEvent",
												"id": 40,
												"typeArguments": [
													{
														"type": "reference",
														"name": "IAddNodeTypeEventData",
														"id": 154
													}
												]
											}
										},
										{
											"id": 96,
											"name": "beforeRemoveConnection",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/editor.ts",
													"line": 23,
													"character": 30
												}
											],
											"type": {
												"type": "reference",
												"name": "IPreventableBaklavaEvent",
												"id": 40,
												"typeArguments": [
													{
														"type": "reference",
														"name": "IConnection",
														"id": 249
													}
												]
											}
										},
										{
											"id": 91,
											"name": "beforeRemoveNode",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/editor.ts",
													"line": 18,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "IPreventableBaklavaEvent",
												"id": 40,
												"typeArguments": [
													{
														"type": "reference",
														"name": "INode",
														"id": 176
													}
												]
											}
										},
										{
											"id": 98,
											"name": "beforeUsePlugin",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/editor.ts",
													"line": 25,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IPreventableBaklavaEvent",
												"id": 40,
												"typeArguments": [
													{
														"type": "reference",
														"name": "IPlugin",
														"id": 78
													}
												]
											}
										},
										{
											"id": 95,
											"name": "checkConnection",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/editor.ts",
													"line": 22,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IPreventableBaklavaEvent",
												"id": 40,
												"typeArguments": [
													{
														"type": "reference",
														"name": "IAddConnectionEventData",
														"id": 151
													}
												]
											}
										},
										{
											"id": 88,
											"name": "registerNodeType",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/editor.ts",
													"line": 15,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "IBaklavaEvent",
												"id": 28,
												"typeArguments": [
													{
														"type": "reference",
														"name": "IAddNodeTypeEventData",
														"id": 154
													}
												]
											}
										},
										{
											"id": 97,
											"name": "removeConnection",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/editor.ts",
													"line": 24,
													"character": 24
												}
											],
											"type": {
												"type": "reference",
												"name": "IBaklavaEvent",
												"id": 28,
												"typeArguments": [
													{
														"type": "reference",
														"name": "IConnection",
														"id": 249
													}
												]
											}
										},
										{
											"id": 92,
											"name": "removeNode",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/editor.ts",
													"line": 19,
													"character": 18
												}
											],
											"type": {
												"type": "reference",
												"name": "IBaklavaEvent",
												"id": 28,
												"typeArguments": [
													{
														"type": "reference",
														"name": "INode",
														"id": 176
													}
												]
											}
										},
										{
											"id": 99,
											"name": "usePlugin",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/editor.ts",
													"line": 26,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "IBaklavaEvent",
												"id": 28,
												"typeArguments": [
													{
														"type": "reference",
														"name": "IPlugin",
														"id": 78
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												94,
												90,
												93,
												89,
												87,
												96,
												91,
												98,
												95,
												88,
												97,
												92,
												99
											]
										}
									],
									"sources": [
										{
											"fileName": "types/editor.ts",
											"line": 13,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 100,
							"name": "hooks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/editor.ts",
									"line": 29,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 101,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 103,
											"name": "load",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/editor.ts",
													"line": 31,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "IHook",
												"id": 52,
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 6
													}
												]
											}
										},
										{
											"id": 102,
											"name": "save",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/editor.ts",
													"line": 30,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "IHook",
												"id": 52,
												"typeArguments": [
													{
														"type": "reference",
														"name": "IState",
														"id": 6
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												103,
												102
											]
										}
									],
									"sources": [
										{
											"fileName": "types/editor.ts",
											"line": 29,
											"character": 10
										}
									]
								}
							}
						},
						{
							"id": 107,
							"name": "nodeCategories",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/editor.ts",
									"line": 37,
									"character": 27
								}
							],
							"type": {
								"type": "reference",
								"name": "ReadonlyMap",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								]
							}
						},
						{
							"id": 106,
							"name": "nodeTypes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/editor.ts",
									"line": 36,
									"character": 22
								}
							],
							"type": {
								"type": "reference",
								"name": "ReadonlyMap",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "NodeConstructor",
										"id": 139
									}
								]
							}
						},
						{
							"id": 104,
							"name": "nodes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/editor.ts",
									"line": 34,
									"character": 18
								}
							],
							"type": {
								"type": "reference",
								"name": "ReadonlyArray",
								"typeArguments": [
									{
										"type": "reference",
										"name": "INode",
										"id": 176
									}
								]
							}
						},
						{
							"id": 108,
							"name": "plugins",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/editor.ts",
									"line": 38,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "ReadonlySet",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IPlugin",
										"id": 78
									}
								]
							}
						},
						{
							"id": 120,
							"name": "addConnection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 121,
									"name": "addConnection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 122,
											"name": "from",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "INodeInterface",
												"id": 221
											}
										},
										{
											"id": 123,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "INodeInterface",
												"id": 221
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "IConnection",
												"id": 249
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "types/editor.ts",
									"line": 43,
									"character": 17
								}
							]
						},
						{
							"id": 114,
							"name": "addNode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 115,
									"name": "addNode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 116,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "INode",
												"id": 176
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"name": "INode",
												"id": 176
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "types/editor.ts",
									"line": 41,
									"character": 11
								}
							]
						},
						{
							"id": 127,
							"name": "checkConnection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 128,
									"name": "checkConnection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 129,
											"name": "from",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "INodeInterface",
												"id": 221
											}
										},
										{
											"id": 130,
											"name": "to",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "INodeInterface",
												"id": 221
											}
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "false"
											},
											{
												"type": "reference",
												"name": "IConnection",
												"id": 249
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "types/editor.ts",
									"line": 45,
									"character": 19
								}
							]
						},
						{
							"id": 131,
							"name": "load",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 132,
									"name": "load",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 133,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IState",
												"id": 6
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/editor.ts",
									"line": 46,
									"character": 8
								}
							]
						},
						{
							"id": 109,
							"name": "registerNodeType",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 110,
									"name": "registerNodeType",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 111,
											"name": "typeName",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 112,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "NodeConstructor",
												"id": 139
											}
										},
										{
											"id": 113,
											"name": "category",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/editor.ts",
									"line": 40,
									"character": 20
								}
							]
						},
						{
							"id": 124,
							"name": "removeConnection",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 125,
									"name": "removeConnection",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 126,
											"name": "connection",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IConnection",
												"id": 249
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/editor.ts",
									"line": 44,
									"character": 20
								}
							]
						},
						{
							"id": 117,
							"name": "removeNode",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 118,
									"name": "removeNode",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 119,
											"name": "node",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "INode",
												"id": 176
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/editor.ts",
									"line": 42,
									"character": 14
								}
							]
						},
						{
							"id": 134,
							"name": "save",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 135,
									"name": "save",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IState",
										"id": 6
									}
								}
							],
							"sources": [
								{
									"fileName": "types/editor.ts",
									"line": 47,
									"character": 8
								}
							]
						},
						{
							"id": 136,
							"name": "use",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 137,
									"name": "use",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 138,
											"name": "plugin",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IPlugin",
												"id": 78
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/editor.ts",
									"line": 48,
									"character": 7
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								105,
								85,
								100,
								107,
								106,
								104,
								108
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								120,
								114,
								127,
								131,
								109,
								124,
								117,
								134,
								136
							]
						}
					],
					"sources": [
						{
							"fileName": "types/editor.ts",
							"line": 11,
							"character": 24
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "Editor",
							"id": 330
						}
					]
				},
				{
					"id": 139,
					"name": "NodeConstructor",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "types/editor.ts",
							"line": 9,
							"character": 27
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 140,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"sources": [
								{
									"fileName": "types/editor.ts",
									"line": 9,
									"character": 29
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						84
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						139
					]
				}
			],
			"sources": [
				{
					"fileName": "types/editor.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 150,
			"name": "\"types/eventDataTypes\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/types/eventDataTypes.ts",
			"children": [
				{
					"id": 151,
					"name": "IAddConnectionEventData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 152,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/eventDataTypes.ts",
									"line": 7,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "INodeInterface",
								"id": 221
							}
						},
						{
							"id": 153,
							"name": "to",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/eventDataTypes.ts",
									"line": 8,
									"character": 6
								}
							],
							"type": {
								"type": "reference",
								"name": "INodeInterface",
								"id": 221
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								152,
								153
							]
						}
					],
					"sources": [
						{
							"fileName": "types/eventDataTypes.ts",
							"line": 6,
							"character": 40
						}
					]
				},
				{
					"id": 158,
					"name": "IAddInterfaceEventData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 162,
							"name": "defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/eventDataTypes.ts",
									"line": 22,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 160,
							"name": "isInput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/eventDataTypes.ts",
									"line": 20,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 159,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/eventDataTypes.ts",
									"line": 19,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 161,
							"name": "option",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/eventDataTypes.ts",
									"line": 21,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								162,
								160,
								159,
								161
							]
						}
					],
					"sources": [
						{
							"fileName": "types/eventDataTypes.ts",
							"line": 18,
							"character": 39
						}
					]
				},
				{
					"id": 154,
					"name": "IAddNodeTypeEventData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 157,
							"name": "category",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/eventDataTypes.ts",
									"line": 14,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 156,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/eventDataTypes.ts",
									"line": 13,
									"character": 8
								}
							],
							"type": {
								"type": "reference",
								"name": "NodeConstructor",
								"id": 139
							}
						},
						{
							"id": 155,
							"name": "typeName",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/eventDataTypes.ts",
									"line": 12,
									"character": 12
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								157,
								156,
								155
							]
						}
					],
					"sources": [
						{
							"fileName": "types/eventDataTypes.ts",
							"line": 11,
							"character": 38
						}
					]
				},
				{
					"id": 163,
					"name": "IAddOptionEventData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 165,
							"name": "component",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/eventDataTypes.ts",
									"line": 27,
									"character": 13
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 166,
							"name": "defaultValue",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/eventDataTypes.ts",
									"line": 28,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 164,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/eventDataTypes.ts",
									"line": 26,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 167,
							"name": "sidebarComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/eventDataTypes.ts",
									"line": 29,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								165,
								166,
								164,
								167
							]
						}
					],
					"sources": [
						{
							"fileName": "types/eventDataTypes.ts",
							"line": 25,
							"character": 36
						}
					]
				},
				{
					"id": 171,
					"name": "INodeUpdateEventData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 174,
							"name": "interface",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/eventDataTypes.ts",
									"line": 40,
									"character": 13
								}
							],
							"type": {
								"type": "reference",
								"name": "INodeInterface",
								"id": 221
							}
						},
						{
							"id": 172,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/eventDataTypes.ts",
									"line": 38,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 173,
							"name": "option",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/eventDataTypes.ts",
									"line": 39,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "INodeOption",
								"id": 142
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								174,
								172,
								173
							]
						}
					],
					"sources": [
						{
							"fileName": "types/eventDataTypes.ts",
							"line": 37,
							"character": 37
						}
					]
				},
				{
					"id": 168,
					"name": "IOptionEventData",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 169,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/eventDataTypes.ts",
									"line": 33,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 170,
							"name": "option",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/eventDataTypes.ts",
									"line": 34,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "INodeOption",
								"id": 142
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								169,
								170
							]
						}
					],
					"sources": [
						{
							"fileName": "types/eventDataTypes.ts",
							"line": 32,
							"character": 33
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						151,
						158,
						154,
						163,
						171,
						168
					]
				}
			],
			"sources": [
				{
					"fileName": "types/eventDataTypes.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 27,
			"name": "\"types/events\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/types/events.ts",
			"children": [
				{
					"id": 28,
					"name": "IBaklavaEvent",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 29,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 30,
							"name": "addListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 31,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 32,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenType",
												"id": 65
											}
										},
										{
											"id": 33,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Listener",
												"id": 66,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/events.ts",
									"line": 6,
									"character": 15
								}
							]
						},
						{
							"id": 37,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 38,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 39,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/events.ts",
									"line": 8,
									"character": 8
								}
							]
						},
						{
							"id": 34,
							"name": "removeListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 35,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 36,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenType",
												"id": 65
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/events.ts",
									"line": 7,
									"character": 18
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								30,
								37,
								34
							]
						}
					],
					"sources": [
						{
							"fileName": "types/events.ts",
							"line": 5,
							"character": 30
						}
					],
					"extendedBy": [
						{
							"type": "reference",
							"name": "IPreventableBaklavaEvent",
							"id": 40
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "BaklavaEvent",
							"id": 261
						},
						{
							"type": "reference",
							"name": "PreventableBaklavaEvent",
							"id": 274
						},
						{
							"type": "reference",
							"name": "PreventableBaklavaEvent",
							"id": 274
						}
					]
				},
				{
					"id": 52,
					"name": "IHook",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 53,
							"name": "I",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 54,
							"name": "O",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 62,
							"name": "execute",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 63,
									"name": "execute",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 64,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "I"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "O"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/events.ts",
									"line": 18,
									"character": 11
								}
							]
						},
						{
							"id": 55,
							"name": "tap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 56,
									"name": "tap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 57,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenType",
												"id": 65
											}
										},
										{
											"id": 58,
											"name": "tapFn",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "HookTap",
												"id": 71,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "I"
													},
													{
														"type": "typeParameter",
														"name": "O"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/events.ts",
									"line": 16,
									"character": 7
								}
							]
						},
						{
							"id": 59,
							"name": "untap",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 60,
									"name": "untap",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 61,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenType",
												"id": 65
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/events.ts",
									"line": 17,
									"character": 9
								}
							]
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								62,
								55,
								59
							]
						}
					],
					"sources": [
						{
							"fileName": "types/events.ts",
							"line": 15,
							"character": 22
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "Hook",
							"id": 287
						},
						{
							"type": "reference",
							"name": "SequentialHook",
							"id": 302
						}
					]
				},
				{
					"id": 40,
					"name": "IPreventableBaklavaEvent",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 41,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"children": [
						{
							"id": 45,
							"name": "addListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 46,
									"name": "addListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 47,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenType",
												"id": 65
											}
										},
										{
											"id": 48,
											"name": "listener",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Listener",
												"id": 66,
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "T"
													}
												]
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IBaklavaEvent.addListener",
										"id": 30
									}
								}
							],
							"sources": [
								{
									"fileName": "types/events.ts",
									"line": 6,
									"character": 15
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IBaklavaEvent.addListener",
								"id": 30
							}
						},
						{
							"id": 42,
							"name": "emit",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 43,
									"name": "emit",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 44,
											"name": "data",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									},
									"overwrites": {
										"type": "reference",
										"name": "IBaklavaEvent.emit",
										"id": 37
									}
								}
							],
							"sources": [
								{
									"fileName": "types/events.ts",
									"line": 12,
									"character": 8
								}
							],
							"overwrites": {
								"type": "reference",
								"name": "IBaklavaEvent.emit",
								"id": 37
							}
						},
						{
							"id": 49,
							"name": "removeListener",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 50,
									"name": "removeListener",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 51,
											"name": "token",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "TokenType",
												"id": 65
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									},
									"inheritedFrom": {
										"type": "reference",
										"name": "IBaklavaEvent.removeListener",
										"id": 34
									}
								}
							],
							"sources": [
								{
									"fileName": "types/events.ts",
									"line": 7,
									"character": 18
								}
							],
							"inheritedFrom": {
								"type": "reference",
								"name": "IBaklavaEvent.removeListener",
								"id": 34
							}
						}
					],
					"groups": [
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								45,
								42,
								49
							]
						}
					],
					"sources": [
						{
							"fileName": "types/events.ts",
							"line": 11,
							"character": 41
						}
					],
					"extendedTypes": [
						{
							"type": "reference",
							"name": "IBaklavaEvent",
							"id": 28,
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T"
								}
							]
						}
					]
				},
				{
					"id": 71,
					"name": "HookTap",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 72,
							"name": "I",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						},
						{
							"id": 73,
							"name": "O",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"sources": [
						{
							"fileName": "types/events.ts",
							"line": 3,
							"character": 19
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 74,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 75,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 76,
											"name": "i",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "I"
											}
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "O"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/events.ts",
									"line": 3,
									"character": 27
								}
							]
						}
					}
				},
				{
					"id": 66,
					"name": "Listener",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"typeParameter": [
						{
							"id": 67,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"sources": [
						{
							"fileName": "types/events.ts",
							"line": 2,
							"character": 20
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 68,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 69,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 70,
											"name": "ev",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "T"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/events.ts",
									"line": 2,
									"character": 25
								}
							]
						}
					}
				},
				{
					"id": 65,
					"name": "TokenType",
					"kind": 4194304,
					"kindString": "Type alias",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "types/events.ts",
							"line": 1,
							"character": 21
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "object"
							},
							{
								"type": "intrinsic",
								"name": "symbol"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						28,
						52,
						40
					]
				},
				{
					"title": "Type aliases",
					"kind": 4194304,
					"children": [
						71,
						66,
						65
					]
				}
			],
			"sources": [
				{
					"fileName": "types/events.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 259,
			"name": "\"types/index\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/types/index.ts",
			"sources": [
				{
					"fileName": "types/index.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 175,
			"name": "\"types/node\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/types/node.ts",
			"children": [
				{
					"id": 176,
					"name": "INode",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 183,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/node.ts",
									"line": 17,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 184,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 186,
											"name": "addInterface",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/node.ts",
													"line": 19,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "IBaklavaEvent",
												"id": 28,
												"typeArguments": [
													{
														"type": "reference",
														"name": "INodeInterface",
														"id": 221
													}
												]
											}
										},
										{
											"id": 190,
											"name": "addOption",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/node.ts",
													"line": 23,
													"character": 17
												}
											],
											"type": {
												"type": "reference",
												"name": "IBaklavaEvent",
												"id": 28,
												"typeArguments": [
													{
														"type": "reference",
														"name": "IOptionEventData",
														"id": 168
													}
												]
											}
										},
										{
											"id": 185,
											"name": "beforeAddInterface",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/node.ts",
													"line": 18,
													"character": 26
												}
											],
											"type": {
												"type": "reference",
												"name": "IPreventableBaklavaEvent",
												"id": 40,
												"typeArguments": [
													{
														"type": "reference",
														"name": "IAddInterfaceEventData",
														"id": 158
													}
												]
											}
										},
										{
											"id": 189,
											"name": "beforeAddOption",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/node.ts",
													"line": 22,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IPreventableBaklavaEvent",
												"id": 40,
												"typeArguments": [
													{
														"type": "reference",
														"name": "IAddOptionEventData",
														"id": 163
													}
												]
											}
										},
										{
											"id": 187,
											"name": "beforeRemoveInterface",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/node.ts",
													"line": 20,
													"character": 29
												}
											],
											"type": {
												"type": "reference",
												"name": "IPreventableBaklavaEvent",
												"id": 40,
												"typeArguments": [
													{
														"type": "reference",
														"name": "INodeInterface",
														"id": 221
													}
												]
											}
										},
										{
											"id": 191,
											"name": "beforeRemoveOption",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/node.ts",
													"line": 24,
													"character": 26
												}
											],
											"type": {
												"type": "reference",
												"name": "IPreventableBaklavaEvent",
												"id": 40,
												"typeArguments": [
													{
														"type": "reference",
														"name": "IOptionEventData",
														"id": 168
													}
												]
											}
										},
										{
											"id": 188,
											"name": "removeInterface",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/node.ts",
													"line": 21,
													"character": 23
												}
											],
											"type": {
												"type": "reference",
												"name": "IBaklavaEvent",
												"id": 28,
												"typeArguments": [
													{
														"type": "reference",
														"name": "INodeInterface",
														"id": 221
													}
												]
											}
										},
										{
											"id": 192,
											"name": "removeOption",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/node.ts",
													"line": 25,
													"character": 20
												}
											],
											"type": {
												"type": "reference",
												"name": "IBaklavaEvent",
												"id": 28,
												"typeArguments": [
													{
														"type": "reference",
														"name": "IOptionEventData",
														"id": 168
													}
												]
											}
										},
										{
											"id": 193,
											"name": "update",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/node.ts",
													"line": 26,
													"character": 14
												}
											],
											"type": {
												"type": "reference",
												"name": "IBaklavaEvent",
												"id": 28,
												"typeArguments": [
													{
														"type": "reference",
														"name": "INodeUpdateEventData",
														"id": 171
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												186,
												190,
												185,
												189,
												187,
												191,
												188,
												192,
												193
											]
										}
									],
									"sources": [
										{
											"fileName": "types/node.ts",
											"line": 17,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 194,
							"name": "hooks",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/node.ts",
									"line": 29,
									"character": 9
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 195,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 196,
											"name": "load",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/node.ts",
													"line": 30,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "IHook",
												"id": 52,
												"typeArguments": [
													{
														"type": "reference",
														"name": "INodeState",
														"id": 10
													}
												]
											}
										},
										{
											"id": 197,
											"name": "save",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/node.ts",
													"line": 31,
													"character": 12
												}
											],
											"type": {
												"type": "reference",
												"name": "IHook",
												"id": 52,
												"typeArguments": [
													{
														"type": "reference",
														"name": "INodeState",
														"id": 10
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												196,
												197
											]
										}
									],
									"sources": [
										{
											"fileName": "types/node.ts",
											"line": 29,
											"character": 10
										}
									]
								}
							}
						},
						{
							"id": 179,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/node.ts",
									"line": 12,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 198,
							"name": "inputInterfaces",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/node.ts",
									"line": 34,
									"character": 19
								}
							],
							"type": {
								"type": "reference",
								"name": "Record",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "INodeInterface",
										"id": 221
									}
								]
							}
						},
						{
							"id": 180,
							"name": "interfaces",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/node.ts",
									"line": 13,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Map",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "INodeInterface",
										"id": 221
									}
								]
							}
						},
						{
							"id": 178,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/node.ts",
									"line": 11,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 181,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/node.ts",
									"line": 14,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Map",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "INodeOption",
										"id": 142
									}
								]
							}
						},
						{
							"id": 199,
							"name": "outputInterfaces",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/node.ts",
									"line": 35,
									"character": 20
								}
							],
							"type": {
								"type": "reference",
								"name": "Record",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "INodeInterface",
										"id": 221
									}
								]
							}
						},
						{
							"id": 182,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/node.ts",
									"line": 15,
									"character": 9
								}
							],
							"type": {
								"type": "reference",
								"name": "Record",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						},
						{
							"id": 177,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/node.ts",
									"line": 10,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 205,
							"name": "calculate",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 206,
									"name": "calculate",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/node.ts",
									"line": 39,
									"character": 13
								}
							]
						},
						{
							"id": 207,
							"name": "getInterface",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 208,
									"name": "getInterface",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 209,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "INodeInterface",
										"id": 221
									}
								}
							],
							"sources": [
								{
									"fileName": "types/node.ts",
									"line": 40,
									"character": 16
								}
							]
						},
						{
							"id": 210,
							"name": "getOptionValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 211,
									"name": "getOptionValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 212,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/node.ts",
									"line": 41,
									"character": 18
								}
							]
						},
						{
							"id": 200,
							"name": "load",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 201,
									"name": "load",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 202,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "INodeState",
												"id": 10
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/node.ts",
									"line": 37,
									"character": 8
								}
							]
						},
						{
							"id": 217,
							"name": "registerEditor",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 218,
									"name": "registerEditor",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 219,
											"name": "editor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IEditor",
												"id": 84
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/node.ts",
									"line": 43,
									"character": 18
								}
							]
						},
						{
							"id": 203,
							"name": "save",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 204,
									"name": "save",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "INodeState",
										"id": 10
									}
								}
							],
							"sources": [
								{
									"fileName": "types/node.ts",
									"line": 38,
									"character": 8
								}
							]
						},
						{
							"id": 213,
							"name": "setOptionValue",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 214,
									"name": "setOptionValue",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 215,
											"name": "name",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 216,
											"name": "value",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/node.ts",
									"line": 42,
									"character": 18
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								183,
								194,
								179,
								198,
								180,
								178,
								181,
								199,
								182,
								177
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								205,
								207,
								210,
								200,
								217,
								203,
								213
							]
						}
					],
					"sources": [
						{
							"fileName": "types/node.ts",
							"line": 8,
							"character": 22
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "Node",
							"id": 419
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						176
					]
				}
			],
			"sources": [
				{
					"fileName": "types/node.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 220,
			"name": "\"types/nodeInterface\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/types/nodeInterface.ts",
			"children": [
				{
					"id": 221,
					"name": "INodeInterface",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 231,
							"name": "connectionCount",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/nodeInterface.ts",
									"line": 18,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 226,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/nodeInterface.ts",
									"line": 12,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 227,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 229,
											"name": "beforeSetValue",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/nodeInterface.ts",
													"line": 14,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IPreventableBaklavaEvent",
												"id": 40,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										},
										{
											"id": 228,
											"name": "setConnectionCount",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/nodeInterface.ts",
													"line": 13,
													"character": 26
												}
											],
											"type": {
												"type": "reference",
												"name": "IBaklavaEvent",
												"id": 28,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "number"
													}
												]
											}
										},
										{
											"id": 230,
											"name": "setValue",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/nodeInterface.ts",
													"line": 15,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "IBaklavaEvent",
												"id": 28,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												229,
												228,
												230
											]
										}
									],
									"sources": [
										{
											"fileName": "types/nodeInterface.ts",
											"line": 12,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 222,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/nodeInterface.ts",
									"line": 7,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 223,
							"name": "isInput",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/nodeInterface.ts",
									"line": 8,
									"character": 11
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 225,
							"name": "option",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/nodeInterface.ts",
									"line": 10,
									"character": 10
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 224,
							"name": "parent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/nodeInterface.ts",
									"line": 9,
									"character": 10
								}
							],
							"type": {
								"type": "reference",
								"name": "INode",
								"id": 176
							}
						},
						{
							"id": 232,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/nodeInterface.ts",
									"line": 19,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 233,
							"name": "load",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 234,
									"name": "load",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 235,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IInterfaceState",
												"id": 18
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/nodeInterface.ts",
									"line": 21,
									"character": 8
								}
							]
						},
						{
							"id": 236,
							"name": "save",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 237,
									"name": "save",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "IInterfaceState",
										"id": 18
									}
								}
							],
							"sources": [
								{
									"fileName": "types/nodeInterface.ts",
									"line": 22,
									"character": 8
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								231,
								226,
								222,
								223,
								225,
								224,
								232
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								233,
								236
							]
						}
					],
					"sources": [
						{
							"fileName": "types/nodeInterface.ts",
							"line": 5,
							"character": 31
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "NodeInterface",
							"id": 493
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						221
					]
				}
			],
			"sources": [
				{
					"fileName": "types/nodeInterface.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 141,
			"name": "\"types/nodeOption\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/types/nodeOption.ts",
			"children": [
				{
					"id": 142,
					"name": "INodeOption",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 146,
							"name": "events",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/nodeOption.ts",
									"line": 8,
									"character": 10
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 147,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 148,
											"name": "beforeSetValue",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/nodeOption.ts",
													"line": 9,
													"character": 22
												}
											],
											"type": {
												"type": "reference",
												"name": "IPreventableBaklavaEvent",
												"id": 40,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										},
										{
											"id": 149,
											"name": "setValue",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "types/nodeOption.ts",
													"line": 10,
													"character": 16
												}
											],
											"type": {
												"type": "reference",
												"name": "IBaklavaEvent",
												"id": 28,
												"typeArguments": [
													{
														"type": "intrinsic",
														"name": "any"
													}
												]
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												148,
												149
											]
										}
									],
									"sources": [
										{
											"fileName": "types/nodeOption.ts",
											"line": 8,
											"character": 11
										}
									]
								}
							}
						},
						{
							"id": 143,
							"name": "optionComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/nodeOption.ts",
									"line": 4,
									"character": 19
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 145,
							"name": "sidebarComponent",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true,
								"isOptional": true
							},
							"sources": [
								{
									"fileName": "types/nodeOption.ts",
									"line": 6,
									"character": 20
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						},
						{
							"id": 144,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/nodeOption.ts",
									"line": 5,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								146,
								143,
								145,
								144
							]
						}
					],
					"sources": [
						{
							"fileName": "types/nodeOption.ts",
							"line": 3,
							"character": 28
						}
					],
					"implementedBy": [
						{
							"type": "reference",
							"name": "NodeOption",
							"id": 398
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						142
					]
				}
			],
			"sources": [
				{
					"fileName": "types/nodeOption.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 77,
			"name": "\"types/plugin\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/types/plugin.ts",
			"children": [
				{
					"id": 78,
					"name": "IPlugin",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 79,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/plugin.ts",
									"line": 4,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 80,
							"name": "register",
							"kind": 2048,
							"kindString": "Method",
							"flags": {
								"isExported": true
							},
							"signatures": [
								{
									"id": 81,
									"name": "register",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 82,
											"name": "editor",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "IEditor",
												"id": 84
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "types/plugin.ts",
									"line": 5,
									"character": 12
								}
							]
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								79
							]
						},
						{
							"title": "Methods",
							"kind": 2048,
							"children": [
								80
							]
						}
					],
					"sources": [
						{
							"fileName": "types/plugin.ts",
							"line": 3,
							"character": 24
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						78
					]
				}
			],
			"sources": [
				{
					"fileName": "types/plugin.ts",
					"line": 1,
					"character": 0
				}
			]
		},
		{
			"id": 5,
			"name": "\"types/state\"",
			"kind": 1,
			"kindString": "External module",
			"flags": {
				"isExported": true
			},
			"originalName": "C:/Users/fredd/Programmieren/baklavajs/packages/baklavajs-core/types/state.ts",
			"children": [
				{
					"id": 22,
					"name": "IConnectionState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 24,
							"name": "from",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/state.ts",
									"line": 22,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 23,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/state.ts",
									"line": 21,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 25,
							"name": "to",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/state.ts",
									"line": 23,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								24,
								23,
								25
							]
						}
					],
					"sources": [
						{
							"fileName": "types/state.ts",
							"line": 20,
							"character": 33
						}
					],
					"extendedTypes": [
						{
							"type": "reflection",
							"declaration": {
								"id": 26,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"sources": [
									{
										"fileName": "types/state.ts",
										"line": 20,
										"character": 41
									}
								]
							}
						}
					]
				},
				{
					"id": 18,
					"name": "IInterfaceState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 19,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/state.ts",
									"line": 16,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 20,
							"name": "value",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/state.ts",
									"line": 17,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								19,
								20
							]
						}
					],
					"sources": [
						{
							"fileName": "types/state.ts",
							"line": 15,
							"character": 32
						}
					],
					"extendedTypes": [
						{
							"type": "reflection",
							"declaration": {
								"id": 21,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"sources": [
									{
										"fileName": "types/state.ts",
										"line": 15,
										"character": 40
									}
								]
							}
						}
					]
				},
				{
					"id": 10,
					"name": "INodeState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 13,
							"name": "id",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/state.ts",
									"line": 9,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 14,
							"name": "interfaces",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/state.ts",
									"line": 10,
									"character": 14
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "reference",
												"name": "IInterfaceState",
												"id": 18
											}
										]
									}
								]
							}
						},
						{
							"id": 12,
							"name": "name",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/state.ts",
									"line": 8,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 15,
							"name": "options",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/state.ts",
									"line": 11,
									"character": 11
								}
							],
							"type": {
								"type": "reference",
								"name": "Array",
								"typeArguments": [
									{
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										]
									}
								]
							}
						},
						{
							"id": 16,
							"name": "state",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/state.ts",
									"line": 12,
									"character": 9
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 11,
							"name": "type",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/state.ts",
									"line": 7,
									"character": 8
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								13,
								14,
								12,
								15,
								16,
								11
							]
						}
					],
					"sources": [
						{
							"fileName": "types/state.ts",
							"line": 6,
							"character": 27
						}
					],
					"extendedTypes": [
						{
							"type": "reflection",
							"declaration": {
								"id": 17,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"sources": [
									{
										"fileName": "types/state.ts",
										"line": 6,
										"character": 35
									}
								]
							}
						}
					]
				},
				{
					"id": 6,
					"name": "IState",
					"kind": 256,
					"kindString": "Interface",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 8,
							"name": "connections",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/state.ts",
									"line": 3,
									"character": 15
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "IConnectionState",
									"id": 22
								}
							}
						},
						{
							"id": 7,
							"name": "nodes",
							"kind": 1024,
							"kindString": "Property",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "types/state.ts",
									"line": 2,
									"character": 9
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "INodeState",
									"id": 10
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"kind": 1024,
							"children": [
								8,
								7
							]
						}
					],
					"sources": [
						{
							"fileName": "types/state.ts",
							"line": 1,
							"character": 23
						}
					],
					"extendedTypes": [
						{
							"type": "reflection",
							"declaration": {
								"id": 9,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {},
								"sources": [
									{
										"fileName": "types/state.ts",
										"line": 1,
										"character": 31
									}
								]
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Interfaces",
					"kind": 256,
					"children": [
						22,
						18,
						10,
						6
					]
				}
			],
			"sources": [
				{
					"fileName": "types/state.ts",
					"line": 1,
					"character": 0
				}
			]
		}
	],
	"groups": [
		{
			"title": "External modules",
			"kind": 1,
			"children": [
				524,
				329,
				260,
				328,
				1,
				613,
				414,
				547,
				492,
				397,
				238,
				83,
				150,
				27,
				259,
				175,
				220,
				141,
				77,
				5
			]
		}
	]
}